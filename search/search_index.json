{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"LAMP_rhel/","title":"Practica LAMP en RHEL","text":""},{"location":"LAMP_rhel/#l-a-m-p-s-t-a-c-k-en-ubuntu","title":"L A M P S T A C K en UBUNTU","text":"<p>Para esta pr\u00e1ctica hay que realizar principalmente la instalaci\u00f3n de la pila LAMP (Linux, Apache, MySQL, PHP.)   El proceso se har\u00e1 de forma automatizada mediante 2 scripts: uno de ellos ser\u00e1 utilizado para la instalaci\u00f3n de la pila LAMP y el otro para la implantaci\u00f3n de ciertas herramientas webs como phpmyadmin y adicionales.</p>"},{"location":"LAMP_rhel/#1-inicial","title":"1. Inicial:","text":"<p>Primeramente empezar\u00e9 configurando dentro de la una carpeta llamada Scripts, 2 archivos .sh el primero ser\u00e1 donde se realizar\u00e1 lo que concierne a la instalaci\u00f3n de la pila LAMP (install_lamp.sh) y el segundo para el agregado de ciertas tools (installtools.sh).</p> <p></p>"},{"location":"LAMP_rhel/#11-configuraciones-iniciales","title":"1.1 Configuraciones iniciales:","text":""},{"location":"LAMP_rhel/#mostrar-comandos","title":"Mostrar comandos:","text":"<p>Este comando incialmente se ejecutar\u00e1 para mostrar los comandos por si surgiera alg\u00fan error con alguno:</p> <pre><code>set -x\n</code></pre>"},{"location":"LAMP_rhel/#actualizacion-de-paquetes-y-repositorios","title":"Actualizaci\u00f3n de paquetes y repositorios:","text":"<p>Con el siguiente comando podemos realizar la actualizaci\u00f3n de la lista de paquetes:</p> <pre><code>apt update\n</code></pre> <p>Por el contrario este otro trae nuevas versiones a los paquetes ya instalados:</p> <pre><code>apt upgrade\n</code></pre>"},{"location":"LAMP_rhel/#2-implantacion-de-la-pila","title":"2. Implantaci\u00f3n de la pila:","text":""},{"location":"LAMP_rhel/#21-instalacion-de-apache","title":"2.1 Instalaci\u00f3n de APACHE:","text":"<p>Empleando este comando pasar\u00e9 con la instalaci\u00f3n de apache, y el par\u00e1metro -y es para que no salga la pregunta de confirmaci\u00f3n:</p> <pre><code>apt install apache2 -y\n</code></pre>"},{"location":"LAMP_rhel/#22-instalacion-de-mysql","title":"2.2 Instalaci\u00f3n de MySQL:","text":"<p>Empleando este comando pasar\u00e9 con la instalaci\u00f3n de MySQL, y el par\u00e1metro -y es para que no salga la pregunta de confirmaci\u00f3n:</p> <pre><code>apt install mysql-server -y\n</code></pre>"},{"location":"LAMP_rhel/#23-instalacion-de-php","title":"2.3 Instalaci\u00f3n de PHP:","text":"<p>Empleando este comando pasar\u00e9 con la instalaci\u00f3n de PHP, junto a 2 m\u00f3dulos libapache2-mod-php para el servidor web de apache y php-mysql que enlaza php junto a mysql,  y el par\u00e1metro -y es para que no salga la pregunta de confirmaci\u00f3n:</p> <pre><code>apt install php libapache2-mod-php php-mysql -y\n</code></pre>"},{"location":"LAMP_rhel/#24-archivo-de-configuracion-de-apache","title":"2.4 Archivo de configuraci\u00f3n de apache:","text":"<p>En esta parte de aqu\u00ed bajo la carpeta conf, podemos tener creado un archivo 000-default.conf donde tengamos implementada la configuraci\u00f3n del VirtualHost del servidor web:</p> <p></p> <p>y en nuestro script de automatizaci\u00f3n podemos emplear el comando cp para copiar hacia la ruta donde apache tiene los servidores webs no activos, automatizando de este modo la tarea:</p> <pre><code>cp ../conf/000-default.conf /etc/apache2/sites-available \n</code></pre> <p>tras ello podemos realizar un reinicio del servicio:</p> <pre><code>systemctl restart apache2\n</code></pre>"},{"location":"LAMP_rhel/#25-modificacion-de-grupo-y-propietario","title":"2.5 Modificaci\u00f3n de grupo y propietario:","text":"<p>Como incialemente puede estar perteneciendo a root, de la ruta /var/www/html, (que es la carpeta predeterminada ra\u00edz para el servidor web donde se alojan las p\u00e1ginas) cambiamos al propietario y grupo al de apache con el siguiente comando:</p> <pre><code>chown -R www-data:www-data /var/www/html\n</code></pre>"},{"location":"LAMP_rhel/#3-configuracion-de-las-tools","title":"3. Configuraci\u00f3n de las tools:","text":""},{"location":"LAMP_rhel/#31-como-podriamos-automatizar-la-instalacion-de-phpmyadmin-desde-un-script-de-bash","title":"3.1 \u00bfC\u00f3mo podr\u00edamos automatizar la instalaci\u00f3n de phpmyadmin desde un script de Bash?","text":"<p>Para no tener que estar seleccionando de forma manual las opciones al  podemos emplear ciertos comandos dentro del script installtools.sh para ello se emplea lo siguiente:</p> <p>El siguiente comando le dice que seleccione apache en la elecci\u00f3n del servidor web, para ello se hace uso de  debconf-set-selections para automatizar nuestra respuesta.</p> <pre><code>echo \"phpmyadmin phpmyadmin/reconfigure-webserver multiselect apache2\" | debconf-set-selections\n</code></pre> <p>El siguiente comando automatiza el valor booleano de elecci\u00f3n, en este caso true para utilizar dbconfig-common para configurar la base de datos de phpmyadmin:</p> <pre><code>echo \"phpmyadmin phpmyadmin/dbconfig-install boolean true\" | debconf-set-selections\n</code></pre>"},{"location":"LAMP_rhel/#32-configuracion-automatizada-de-las-credenciales-de-phpmyadmin","title":"3.2 Configuraci\u00f3n automatizada de las credenciales de phpmyadmin","text":"<p>Para no tener que estar introduciendo nuestro usuario y contrase\u00f1a durante la propia instalaci\u00f3n, podemos meter dentro de nuestra carpeta de Scripts un archivo .env (que permanece oculto), donde asignemos las variables para el usuario y contrase\u00f1a, y las credenciales para acceder via web al phpmyadmin:</p> <p></p> <p></p> <p>y desde el propio script llamaremos a las variables usando la herramienta debconf-set-selections para automatizar la respuesta de introducci\u00f3n y confirmaci\u00f3n de la contrase\u00f1a:</p> <pre><code>echo \"phpmyadmin phpmyadmin/mysql/app-pass password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\n</code></pre> <pre><code>echo \"phpmyadmin phpmyadmin/app-password-confirm password $PHPMYADMIN_APP_PASSWORD\" | debconf-set-selections\n</code></pre>"},{"location":"LAMP_rhel/#33-instalacion-de-phpmyadmin","title":"3.3 Instalaci\u00f3n de phpmyadmin","text":"<p>Una vez hecha la configuraci\u00f3n previa se puede pasar con la instalaci\u00f3n ya automatizada de phpmyadmin junto a ciertos componentes:</p> <pre><code>apt install phpmyadmin php-mbstring php-zip php-gd php-json php-curl\n</code></pre>"},{"location":"LAMP_rhel/#34-configuracion-de-acceso-automatizado-de-usuario-a-las-bases-de-datos","title":"3.4 Configuraci\u00f3n de acceso automatizado de usuario a las bases de datos","text":"<p>En estaa parte de aqu\u00ed llamaremos a la variable perteneciente al usuario del archivo .env para crear de forma automatizada uno que tenga acceso a todas las tablas de todas las bases de datos.</p> <p>Este primer comando redirige la orden de borrar el usuario de nuestra variable en caso de que exista para que no de conflicto cada vez que se ejecuta el script:</p> <pre><code>mysql -u root &lt;&lt;&lt; \"DROP USER IF EXISTS '$APP_USER'@'%'\"\n</code></pre> <p>Luego se realiza la creaci\u00f3n del usuario, pudiendo conectarse de forma remota, identificandolo con su contrase\u00f1a:</p> <pre><code>mysql -u root &lt;&lt;&lt; \"CREATE USER '$APP_USER'@'%' IDENTIFIED BY '$APP_PASSWD';\"\n</code></pre> <p>Luego se le otorga al usuario todos los permisos a todas las tablas de todas las bases de datos:</p> <pre><code>mysql -u root &lt;&lt;&lt;  \"GRANT ALL PRIVILEGES ON *.* TO '$APP_USER'@'%'\";\n</code></pre>"},{"location":"LAMP_rhel/#34-instalacion-de-adminer","title":"3.4 Instalaci\u00f3n de ADMINER","text":"<p>En esta parte se implementa Adminer como alternativa al phpmyadmin para acceder al mysql, lo que se har\u00e1 primeramente es crear su directorio en la ruta /var/www/html</p> <p>Con el par\u00e1metro -p  indica que cree el directorio en caso de que no existe, pero si existe no ocurre ning\u00fan error:</p> <pre><code>mkdir -p /var/www/html/adminer\n</code></pre> <p>Luego podemos descargar el archivo de Adminer sobre la ruta indicada:</p> <pre><code>wget https://github.com/vrana/adminer/releases/download/v4.8.1/adminer-4.8.1-mysql.php -P /var/www/html/adminer\n</code></pre> <p>Podemos pasar renombrar el archivo .php que arroja:</p> <pre><code>mv /var/www/html/adminer/adminer-4.8.1-mysql.php /var/www/html/adminer/index.php\n</code></pre> <p>Seguidamente se pasa a cambiar el propietario y grupo para el usuario de apache:</p> <pre><code>chown -R www-data:www-data /var/www/html\n</code></pre>"},{"location":"LAMP_rhel/#35-instalacion-y-configuracion-de-goacess","title":"3.5 Instalaci\u00f3n y configuraci\u00f3n de GoAcess","text":"<p>Con el siguiente comando se procede con la instalaci\u00f3n:</p> <pre><code>apt install goaccess -y\n</code></pre> <p>Creamos un directorio para los informes html GoAccess:</p> <pre><code>mkdir -p /var/www/html/stats\n</code></pre> <p>Para generar un archivo index.html en la ruta /var/www/html/stats/ con la informaci\u00f3n de log en tiempo real podemos usar el siguiente comando, agregando --real-time-html ya que de lo contrario solo genera archivos html est\u00e1ticos de un momento determinado, la opci\u00f3n --daemonize lo crea en segundo plano para liberar a la terminal:</p> <pre><code>goaccess /var/log/apache2/access.log -o /var/www/html/stats/index.html --log-format=COMBINED --real-time-html --daemonize\n</code></pre> <p>NOTA: <code>Para que genere los archivos html en tiempo real hay que abrir el puerto 7890.</code></p>"},{"location":"LAMP_rhel/#36-autenticacion-de-goacess","title":"3.6 Autenticaci\u00f3n de GoAcess","text":"<p>Mediante el siguiente comando se realiza la creaci\u00f3n del archivo .htpasswd donde se guarda la contrase\u00f1a cifrada del usuario para el usuario que se le indica mediante la llamada de la variable, asi como la llamada a la variable de la contrase\u00f1a para autenticarte en el directorio.</p> <p>Podemos meter dichas variables en el archivo .env del directorio de Scripts</p> <p></p> <p>el par\u00e1metro -b permite utilizar el comando en un script de bash</p> <pre><code>htpasswd -bc /etc/apache2/.htpasswd $STATS_USERNAME $STATS_PASSWORD`\n</code></pre> <p>Seguidamente, el directorio .conf podemos  crear un segundo archivo de configuraci\u00f3n para el stats</p> <p></p> <p>Y mediante este comando de forma automatizada podemos estar copiando con un nombre distinto nuestro archivo de configuraci\u00f3n con el nombre 000-default.conf para que lo detecte apache con el nombre por defecto que tiene ese archivo:</p> <p>Internamente el archivo est\u00e1 puesto de esta forma:</p> <p></p> <pre><code>cp ../conf/000-default-stats.conf /etc/apache2/sites-available/000-default.conf\n</code></pre>"},{"location":"LAMP_ubuntu/","title":"Practica_01-02","text":""},{"location":"LAMP_ubuntu/#l-a-m-p-en-rhel","title":"L A M P  en RHEL","text":"<p>Para la realizaci\u00f3n de esta pr\u00e1ctica se lanzar\u00e1 un nueva instancia en este caso de RedHat donde se har\u00e1 la instalaci\u00f3n de la pila en RHEL. Por ello el gestor de paquetes usado no ser\u00e1 apt si no dnf.</p>"},{"location":"LAMP_ubuntu/#1-inicial","title":"1. Inicial:","text":"<p>Primeramente empezar\u00e9 configurando dentro de la una carpeta llamada Scripts, 2 archivos .sh el primero ser\u00e1 donde se realizar\u00e1 lo que concierne a la instalaci\u00f3n de la pila LAMP (install_lamp.sh) y el segundo para el agregado de ciertas tools (installtools.sh).</p> <p></p>"},{"location":"LAMP_ubuntu/#11-configuraciones-iniciales","title":"1.1 Configuraciones iniciales:","text":"<p>Desde el script de install_lamp.sh es donde se realizar\u00e1n las configuraciones iniciales, a continuaci\u00f3n se muestra el siguiente comando para que vaya mostrando los comandos que se ejecutan:</p>"},{"location":"LAMP_ubuntu/#mostrar-comandos","title":"Mostrar comandos:","text":"<pre><code>set -x\n</code></pre>"},{"location":"LAMP_ubuntu/#actualizacion-de-paquetes-y-repositorios","title":"Actualizaci\u00f3n de paquetes y repositorios:","text":"<p>Con el siguiente comando podemos realizar la actualizaci\u00f3n de la lista de paquetes:</p> <pre><code>dnf update -y\n</code></pre>"},{"location":"LAMP_ubuntu/#2-implantacion-de-la-pila","title":"2. Implantaci\u00f3n de la pila:","text":""},{"location":"LAMP_ubuntu/#21-instalacion-de-apache","title":"2.1 Instalaci\u00f3n de APACHE:","text":"<p>Para la distribuci\u00f3n de RedHat el Apache tiene el nombre de httpd para dicho servidor web.</p> <p>Con el siguiente comando se realiza la instalaci\u00f3n del servidor web:</p> <pre><code>dnf install httpd -y\n</code></pre> <p>Para poder iniciar el servicio de apache se puede hacer mediante el siguiete comando:</p> <pre><code>systemctl start httpd\n</code></pre> <p>Despu\u00e9s de la inicializaci\u00f3n se pasar\u00eda a emplear el siguiente comando para que el servicio se inicie de forma autom\u00e1tica:</p> <pre><code>systemctl enable httpd\n</code></pre>"},{"location":"LAMP_ubuntu/#22-instalacion-de-mysql","title":"2.2 Instalaci\u00f3n de MySQL:","text":"<p>Empleando este comando pasar\u00e9 con la instalaci\u00f3n de MySQL, y el par\u00e1metro -y es para que no salga la pregunta de confirmaci\u00f3n:</p> <pre><code>dnf install mysql-server -y\n</code></pre> <p>Despu\u00e9s pasar\u00eda a inciar el MySQL con el siguiente comando:</p> <pre><code>systemctl start mysqld\n</code></pre> <p>Luego para que el servicio se inicie de forma autom\u00e1tica empleo el siguiente comando:</p> <pre><code>systemctl enable mysqld\n</code></pre>"},{"location":"LAMP_ubuntu/#23-instalacion-de-php","title":"2.3 Instalaci\u00f3n de PHP:","text":"<p>Empleando este comando pasar\u00e9 con la instalaci\u00f3n de PHP, y el par\u00e1metro -y es para que no salga la pregunta de confirmaci\u00f3n:</p> <pre><code>dnf install php -y\n</code></pre> <p>Para el conexionado con la base de datos se puede emplear el siguiente comando:</p> <pre><code>dnf install php-mysqlnd -y\n</code></pre> <p>Para que los cambios se apliquen ser\u00e1 necesario que se reinicie el servicio de Apache:</p> <pre><code>systemctl restart httpd\n</code></pre>"},{"location":"LAMP_ubuntu/#3-herramientas-adicionales","title":"3. Herramientas adicionales","text":"<p>Esta parte de la pr\u00e1ctica se realizar\u00e1 desde el otro script install_tools.sh. En el que nos traeremos ciertos modulos PHP necesarios para el phpmyadmin asi como tambi\u00e9n descargar el codigo fuente de phpmyadmin por el metodo de descarga (no de GitHub).</p> <p>Dentro de la carpeta de scripts esta implementado un archivo .env donde se ponen las variables necesarias para posteriormente la creaci\u00f3n de los usuarios de MySQL usuario, contrase\u00f1a y la base de datos.</p> <p></p> <p>En esta parte de aqu\u00ed estoy empezando con la instalaci\u00f3n de ciertos m\u00f3dulos de PHP necesarios para phpmyadmin:</p> <pre><code>dnf install php-mbstring php-zip php-json php-gd php-fpm php-xml -y\n</code></pre> <p>Despu\u00e9s de lo anterior se puede pasar a la reiniciaci\u00f3n del servicio de apache:</p> <pre><code>systemctl restart httpd\n</code></pre>"},{"location":"LAMP_ubuntu/#31-instalacion-de-wget","title":"3.1 Instalaci\u00f3n de wget","text":"<p>Con este comando se realiza la instalaci\u00f3n de la herramienta:</p> <pre><code>dnf install wget -y\n</code></pre> <p>Antes de nada pasamos con la eliminaci\u00f3n de descargas previas del phpmyadmin:</p> <pre><code>rm -rf /tmp/phpMyAdmin-5.2.1-all-languages.zip\n</code></pre> <p>Tambi\u00e9n de la propia ruta donde se aloja el phpmyadmin se eliminan instalaciones previas:</p> <pre><code>rm -rf /var/www/html/phpmyadmin\n</code></pre>"},{"location":"LAMP_ubuntu/#32-codigo-fuente-del-phpmyadmin","title":"3.2 C\u00f3digo fuente del phpmyadmin","text":"<p>Con el siguiente comando se puede descargar el c\u00f3digo fuente del phpmyadmin y con el par\u00e1metro -P para redireccionar el resultado a la carpeta temporal:</p> <pre><code>wget https://files.phpmyadmin.net/phpMyAdmin/5.2.1/phpMyAdmin-5.2.1-all-languages.zip -P /tmp\n</code></pre> <p>Para descomprimirlo se realizar\u00e1 la instalaci\u00f3n de unzip:</p> <pre><code>dnf install unzip -y\n</code></pre> <p>Seguidamente se puede pasar con la descompresi\u00f3n del archivo .zip:</p> <pre><code>unzip -u /tmp/phpMyAdmin-5.2.1-all-languages.zip -d /var/www/html\n</code></pre> <p>Para darle un nombre m\u00e1s personalizado a la hora de acceder al phpmyadmin via navegador lo renombreremos:</p> <pre><code>mv /var/www/html/phpMyAdmin-5.2.1-all-languages /var/www/html/phpmyadmin\n</code></pre> <p>Justo despues se puede pasar a cambiar el propietario y grupo por el de apache:</p> <pre><code>chown -R apache:apache /var/www/html\n</code></pre>"},{"location":"LAMP_ubuntu/#33-construccion-de-la-base-de-datos-con-el-codigo-fuente-del-phpmyadmin","title":"3.3 Construcci\u00f3n de la base de datos con el c\u00f3digo fuente del phpmyadmin","text":"<p>Realizamos el copiado de config.sample.inc.php en config.inc.php en la ruta /var/www/html/phpmyadmin para realizar la construcci\u00f3n de la base de datos en el codigo fuente de phpmyadmin</p> <pre><code>cp /var/www/html/phpmyadmin/config.sample.inc.php /var/www/html/phpmyadmin/config.inc.php\n</code></pre>"},{"location":"LAMP_ubuntu/#34-generacion-de-valor-aleatorio-de-32-caracteres","title":"3.4 Generaci\u00f3n de valor aleatorio de 32 caracteres","text":"<p><code>Primer warning de las cookies:</code></p> <p>Con esta variable de aqu\u00ed me generaremos el valor aleatorio cifrado que luego mediante la expresi\u00f3n regular se implmentar\u00e1 en el archivo config.inc.php, esto ser\u00e1 \u00fatil para solventar el warning de las cookies de phpmyadmin:</p> <pre><code>RANDOM_VALUE=`openssl rand -hex 16`\n</code></pre> <p>Con la expresi\u00f3n s/ para buscar/reemplazar, y lo que hace es buscar la cadena $cfg['blowfish_secret'] = y mediante /1 se le indica que una el valor generado de la variable $RANDOM_VALUE, y se redirige al archivo de configuraci\u00f3n:</p> <pre><code>sed -i \"s/\\(\\$cfg\\['blowfish_secret'\\] =\\).*/\\1 '$RANDOM_VALUE';/\" /var/www/html/phpmyadmin/config.inc.php\n</code></pre> <p><code>Segundo warning del /tmp:</code></p> <p>La siguiente expresi\u00f3n regular estar\u00eda indicando que la cadena $cfg['TempDir'] = '/tmp' me la ponga una linea por debajo de la cadena blowfish_secret con el parametro a, en el archivo de configuraci\u00f3n config.inc.php:</p> <pre><code> sed -i \"/blowfish_secret/a \\$cfg\\['TempDir'\\] = '/tmp';\" /var/www/html/phpmyadmin/config.inc.php \n ```\n ### 3.5 Configuraci\u00f3n de los usuarios de MySQL:\n\n Habr\u00e1 que elimianr eliminar si existe alguna base de datos previa antes de importar la base de datos previa de phpmyadmin para que no genere conflicto:\n\n</code></pre> <p>mysql -u root &lt;&lt;&lt; \"DROP DATABASE IF EXISTS phpmyadmin\"</p> <pre><code>Importar el script de creacion de base de datos de phpmyadmin:\n\n</code></pre> <p>mysql -u root &lt; /var/www/html/phpmyadmin/sql/create_tables.sql ```</p>"},{"location":"about/","title":"About","text":"<p>contenido del archivo about.md</p>"}]}